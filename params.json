{"name":"RebenchR","tagline":"An IO benchmarking toolkit for SSDs and HDDs","body":"RebenchR is an advanced disk IO benchmarking toolkit. This toolkit is able to simulate various workload patterns,\r\nsupport five different APIs with the full control of call parameters, collect detailed statistics and \r\nvisualize it using R.\r\n\r\n# Usage: \r\n\t./rebench [OPTIONS] DEVICE\r\n\r\n\tAlternatively, if no arguments are passed on the command line, ./rebench will read\r\n\tstandard input and read its arguments from there. Multiple lines may be used\r\n\tto specify multiple concurrent workloads.\r\n\r\n# Arguments:\r\n\tDEVICE - device or file name to perform operations on.\r\n\r\n# Options:\r\n\t-d, --duration\r\n                Duration of the benchmark in seconds.\r\n                Duration can be specified in KB, MB, and GB (add 'k', 'm', or 'g'\r\n                to the end of the number. The benchmark will stop when that much\r\n                data has been processed. If the number is followed by '%',\r\n                the size will be that percentage of the device. If duration is\r\n                set to 'i', rebench will run commands interactively (useful for\r\n                debugging with btrace, and only available in single-threaded mode).\r\n\t-c, --threads\r\n                Numbers of threads used to run the benchmark.\r\n\t-b, --block_size\r\n                Size of blocks in bytes to use for IO operations.\r\n                Block size can also be specified in units other than bytes by appending\r\n                'k', 'm', 'g', or '%'.\r\n\t-s, --stride\r\n                Size of stride in bytes (only applies to sequential workloads).\r\n                Stride can also be specified in units other than bytes by appending\r\n                'k', 'm', 'g', or '%'.\r\n\t-w, --workload\r\n                Description of a workload to perform.\r\n                Valid options are 'rnd' for a random load, and 'seq' for a sequential load.\r\n\t-t, --type\r\n                Type of IO calls to use.\r\n                Valid options are 'stateful' for read/write IO,\r\n                'stateless' for pread/pwrite type of IO, 'mmap' for\r\n                memory mapping, 'paio' for POSIX asynchronous IO,\r\n                and 'naio' for native OS asynchronous IO.\r\n\t-q, --queue-depth\r\n                The number of simultaneous AIO calls.\r\n                Valid only during 'paio', and 'naio' type of runs.\r\n\t--eventfd\r\n                Use eventfd for aio completion notification.\r\n                Valid only during 'naio' type of runs. Useful for measuring eventfd overhead.\r\n\t-r, --direction\r\n                Direction in which the operations are performed.\r\n                Valid options are 'formward' and 'backward'.\r\n                This option is only applicable to sequential workloads.\r\n\t-o, --operation\r\n                The operation to be performed.\r\n                Valid options are 'read', 'write', and 'trim'.\r\n                Note that trim is only available on SSD devices\r\n                via a stateful interface.\r\n\t-p, --paged\r\n                This options turns off direct IO (which is on by default).\r\n\t-f, --buffered\r\n                This options turns off flushing (flushing is on by default).\r\n                This option is only applicable for write operations.\r\n\t-m, --do-atime\r\n                This options turns on atime updates (off by default).\r\n\t-a, --append\r\n                Open the file in append-only mode (off by default).\r\n                This option is only applicable for sequential writes.\r\n\t-u, --dist\r\n                The distribution used for random workloads (uniform by default).\r\n                Valid options are 'uniform', 'normal', 'pow' (for power law) and const\r\n                (for accessing one block). This option is only applicable for random workloads.\r\n\t-i, --sigma\r\n                Controls the random distribution.\r\n                For normal distribution, it is the percent of the data one standard deviation away\r\n                from the mean (5 by default). If sigma = 5, roughly 68% of the time only 10%\r\n                of the data will be accessed. This option is only applicable when distribution is\r\n                set to 'normal'.\r\n                For power distribution, it is the percentage of the size of the device that will\r\n                be the mean accessed location (5 by default).\r\n\t-l, --local-fd\r\n                Use a thread local file descriptor (by default file descriptors\r\n                are shared across threads).\r\n\t-n, --silent\r\n                Non-interactive mode. Won't ask for write confirmation, and will\r\n                print machine readable output in the following format:\r\n                [ops per second] [MB/sec] [min ops per second] [max ops per second] [standard deviation]\r\n\t-j, --offset\r\n                The offset in the file to start operations from.\r\n                By default, this value is set to zero.\r\n                Offset can also be specified in units other than bytes by appending 'k', 'm', 'g',\r\n                or '%'.\r\n\t-e, --length\r\n                The length from the offset in the file to perform operations on.\r\n                By default, this value is set to the length of the file or the device.\r\n                Length can also be specified in units other than bytes by appending 'k', 'm', 'g',\r\n                or '%'.\r\n\t-g, --sample-step\r\n                The timestep between IOPS report samples (in milliseconds).\r\n                Defaults to 1000ms. If set to zero, reports latency of every operation.\r\n\t-z, --pause\r\n                The timestep to wait between a completion of an operation and execution\r\n                of the next operation in microseconds. Defaults to zero.\r\n\t--drop-caches\r\n                Asks the kernel to drop the cache before running the benchmark.\r\n\t--output\r\n                A file name to write detailed data output to at each sample step.\r\n\r\n# R Script\r\ndescribe.R visualizes latency and throughput statistics. \r\n\r\n\tRscript describe.R <trace1 filename> <trace1 name> <trace2 filename> <trace2 name> ...\r\n\r\n# Sample Plots\r\n\r\n![Throughput Time Plot](https://github.com/ikatsov/RebenchR/raw/master/examples/throughput_time_plot.png)\r\n![Latency Time Plot](https://github.com/ikatsov/RebenchR/raw/master/examples/latency_dist_time_plot-2-threads.png)\r\n![Throughput Distribution Plot](https://github.com/ikatsov/RebenchR/raw/master/examples/throughput_hist_time_plot.png)\r\n![Latency Distribution Plot](https://github.com/ikatsov/RebenchR/raw/master/examples/latency_hist_time_plot.png)\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}